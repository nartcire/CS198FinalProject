{"ast":null,"code":"var _jsxFileName = \"/Users/erictran/Desktop/game/src/Components/Board.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport Tile from \"./Tile.jsx\";\nimport \"../Styles/Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  //0 - Walls\n  //1 - Floors\n  //2 - Character\n  //3 - Enemy\n  const [board, setBoard] = useState([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]);\n  const changeTile = (row, col, tileType) => {\n    board[row][col] = tileType;\n    setBoard(board);\n  };\n  const convertBoard = () => {\n    let result = [];\n    let index;\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[0].length; col++) {\n        index = row * 20 + col;\n        result[index] = board[row][col];\n      }\n    }\n    return result;\n  };\n  const display = cBoard => {\n    return cBoard.map(value => {\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        num: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: display().map(value => {\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        num: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"7qUIzWTNkXzD7VejHIGPpsGjO7c=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Tile","Board","board","setBoard","changeTile","row","col","tileType","convertBoard","result","index","length","display","cBoard","map","value"],"sources":["/Users/erictran/Desktop/game/src/Components/Board.jsx"],"sourcesContent":["import {React, useState} from \"react\";\nimport Tile from \"./Tile.jsx\";\nimport \"../Styles/Board.css\";\n\nconst Board = () => {\n\n  //0 - Walls\n  //1 - Floors\n  //2 - Character\n  //3 - Enemy\n  const [board, setBoard] = useState([\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0],\n    [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 0, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 0],\n    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]);\n\n  const changeTile = (row, col, tileType) => {\n    board[row][col] = tileType;\n    setBoard(board);\n\n  }\n\n  const convertBoard = () => {\n    let result = [];\n    let index;\n\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[0].length; col++) {\n        index = row * 20 + col;\n        result[index] = board[row][col];\n      }\n    }\n\n    return result;\n  }\n\n  const display = (cBoard) => {\n    return cBoard.map((value) => {\n      return <Tile num={value}></Tile>\n    });\n  }\n\n  return (\n    <div className=\"board\">\n      {display().map((value) => {\n        return <Tile num={value}></Tile>\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,qBAAqB;AAAC;AAE7B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAElB;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CACjzCL,KAAK,CAACG,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGC,QAAQ;IAC1BJ,QAAQ,CAACD,KAAK,CAAC;EAEjB,CAAC;EAED,MAAMM,YAAY,GAAG,MAAM;IACzB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,KAAK;IAET,KAAK,IAAIL,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,KAAK,CAACS,MAAM,EAAEN,GAAG,EAAE,EAAE;MAC3C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACS,MAAM,EAAEL,GAAG,EAAE,EAAE;QAC9CI,KAAK,GAAGL,GAAG,GAAG,EAAE,GAAGC,GAAG;QACtBG,MAAM,CAACC,KAAK,CAAC,GAAGR,KAAK,CAACG,GAAG,CAAC,CAACC,GAAG,CAAC;MACjC;IACF;IAEA,OAAOG,MAAM;EACf,CAAC;EAED,MAAMG,OAAO,GAAIC,MAAM,IAAK;IAC1B,OAAOA,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK;MAC3B,oBAAO,QAAC,IAAI;QAAC,GAAG,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ;IAClC,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACnBH,OAAO,EAAE,CAACE,GAAG,CAAEC,KAAK,IAAK;MACxB,oBAAO,QAAC,IAAI;QAAC,GAAG,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ;IAClC,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GApDId,KAAK;AAAA,KAALA,KAAK;AAsDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}